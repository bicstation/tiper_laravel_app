services:
  app: # Laravel PHP-FPM サービス
    build:
      context: . # ここをプロジェクトのルートディレクトリに設定 (composer.jsonがある場所)
      dockerfile: ./docker/php/Dockerfile # Dockerfileへのパスを context からの相対パスで指定
    container_name: tiper_laravel_app_php
    volumes:
      - .:/var/www/html # Laravelのルート
      - ./wordpress:/var/www/wordpress # WordPressのファイルをPHPコンテナにもマウント
      - ./.env.local:/var/www/html/.env # ホストの.env.localをコンテナの.envとしてマウント
    depends_on:
      - db
    env_file:
      - ./.env.local # .env.local を使用（Laravelアプリ用）
    environment:
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE:-tiper}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-password}
    networks:
      - app-network

  nginx: # Nginx サービス (LaravelとWordPressの両方を処理)
    image: nginx:alpine
    container_name: tiper_laravel_app_nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/custom_conf/:/etc/nginx/conf.d/:ro # custom_conf ディレクトリ全体をNginxの設定ディレクトリにマウント
      - .:/var/www/html # Laravelプロジェクトルートのマウント
      - ./wordpress:/var/www/wordpress # WordPressファイルのパスをマウント
    depends_on:
      app:
        condition: service_started
      wordpress: # WordPressサービスへの依存を強化
        condition: service_healthy # service_healthy を使用
    networks:
      - app-network
    restart: on-failure # エラー時に再起動する

  db: # Laravel用MySQLデータベース
    image: mysql:8.0
    container_name: tiper_laravel_app_db
    ports: # ★ここが追加・修正されました！ホストOSからDBにアクセスできるようにする
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-tiper}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password --skip-ssl # ★ここが追加されました！
    healthcheck: # ★ここを追加してください！ <<< このブロックを `db` サービスに残す
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # 初回起動時の猶予期間（必要に応じて調整）

  wordpress: # WordPress PHP-FPM サービス
    image: wordpress:latest # WordPressの公式イメージを使用
    container_name: tiper_wordpress_app
    environment:
      WORDPRESS_DB_HOST: wordpress_db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_DB_NAME: wordpress_db
      WORDPRESS_LANG: ja

      WORDPRESS_URL: http://blog.tipers.live
      WORDPRESS_TITLE: "Tiper.Live Blog"
      WORDPRESS_ADMIN_USER: "bicstation"
      WORDPRESS_ADMIN_PASSWORD: "1492nabe"
      WORDPRESS_ADMIN_EMAIL: "bicstation@gmail.com"

      WORDPRESS_DEBUG: true
      WORDPRESS_DEBUG_LOG: true
      WORDPRESS_DEBUG_DISPLAY: false
    volumes:
      - ./wordpress:/var/www/html # ローカルの ./wordpress ディレクトリをコンテナのWebルートにマウント
    depends_on:
      wordpress_db:
        condition: service_healthy # service_healthy を使用
    networks:
      - app-network
    restart: on-failure
    healthcheck: # WordPressコンテナのヘルスチェック
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"] # ★ここを修正しました！トップページがアクセス可能かチェック
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # 初回起動時の猶予期間

  wordpress_db: # WordPress用MySQLデータベース
    image: mysql:8.0
    container_name: tiper_wordpress_db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress_db
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: password
    volumes:
      - wordpress_db_data:/var/lib/mysql # WordPressデータベースのデータを永続化
    networks:
      - app-network
    restart: on-failure
    healthcheck: # データベースコンテナのヘルスチェック
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password --skip-ssl # ★ここが追加されました！

networks:
  app-network:
    driver: bridge

volumes:
  dbdata: # Laravel用データベースボリューム
  wordpress_db_data: # WordPress用データベースボリューム